<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="62" total="74" passed="12" failed="0" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Performing Request : signup/signup_with_valid_credentials<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request End Point : signup/signup_with_valid_credentials<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : getting response : <br>]]>
    </line>
    <line>
      <![CDATA[Step : Response object : {"payload":{"canResendUserVerificationCode":true},"message":"OTP has been sent successfully","statusCode":201}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Validating status code is equal to expected value : 201<br>]]>
    </line>
    <line>
      <![CDATA[Step : Test Passed<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Performing Request : signup/signup_with_blank_password<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request End Point : signup/signup_with_blank_password<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : getting response : <br>]]>
    </line>
    <line>
      <![CDATA[Step : Response object : {"messages":["Password must contain at least one upper case, lowercase and a number","password must be longer than or equal to 8 characters"],"error":true,"type":"validation","statusCode":400}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
    </line>
    <line>
      <![CDATA[Step : Test Passed<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Performing Request : signup/signup_with_invalid_password<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request End Point : signup/signup_with_invalid_password<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : getting response : <br>]]>
    </line>
    <line>
      <![CDATA[Step : Response object : {"messages":["Password must contain at least one upper case, lowercase and a number","password must be longer than or equal to 8 characters"],"error":true,"type":"validation","statusCode":400}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
    </line>
    <line>
      <![CDATA[Step : Test Passed<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Performing Request : signup/signup_with_invalid_email<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request End Point : signup/signup_with_invalid_email<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : getting response : <br>]]>
    </line>
    <line>
      <![CDATA[Step : Response object : {"messages":["email must be an email"],"error":true,"type":"validation","statusCode":400}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
    </line>
    <line>
      <![CDATA[Step : Test Passed<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Performing Request : signup/signup_with_blank_email<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request End Point : signup/signup_with_blank_email<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : getting response : <br>]]>
    </line>
    <line>
      <![CDATA[Step : Response object : {"messages":["email must be an email"],"error":true,"type":"validation","statusCode":400}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
    </line>
    <line>
      <![CDATA[Step : Test Passed<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Performing Request : signup/signup_with_blank_timezone<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request End Point : signup/signup_with_blank_timezone<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : getting response : <br>]]>
    </line>
    <line>
      <![CDATA[Step : Response object : {"messages":[" is invalid timezone","timeZone should not be empty"],"error":true,"type":"validation","statusCode":400}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
    </line>
    <line>
      <![CDATA[Step : Test Passed<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Performing Request : signup/signup_with_same_credentials<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request End Point : signup/signup_with_same_credentials<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : getting response : <br>]]>
    </line>
    <line>
      <![CDATA[Step : Response object : {"code":1001,"error":true,"type":"general","message":"User already exists","statusCode":400}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
    </line>
    <line>
      <![CDATA[Step : Test Passed<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Performing Request : login/login_with_valid_credentials<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request End Point : login/login_with_valid_credentials<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : getting response : <br>]]>
    </line>
    <line>
      <![CDATA[Step : Response object : {"payload":{"firstName":"","lastName":"","accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjE3MTIsImlhdCI6MTY1NjA2OTc1NCwiZXhwIjoxNjU4NjYxNzU0fQ.PZeZkCITyem_ApKbUPZgouppVrJu_pcKVh7Bb8vXdHs","email":"vir@qable.io","trackingId":"M5lNR1Y1SB"},"message":"Logged in successfully","statusCode":201}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Validating status code is equal to expected value : 201<br>]]>
    </line>
    <line>
      <![CDATA[Step : Test Passed<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Performing Request : login/login_with_invalid_email<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request End Point : login/login_with_invalid_email<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : getting response : <br>]]>
    </line>
    <line>
      <![CDATA[Step : Response object : {"messages":["email must be an email"],"error":true,"type":"validation","statusCode":400}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
    </line>
    <line>
      <![CDATA[Step : Test Passed<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Performing Request : login/login_with_blank_email<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request End Point : login/login_with_blank_email<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : getting response : <br>]]>
    </line>
    <line>
      <![CDATA[Step : Response object : {"messages":["email must be an email"],"error":true,"type":"validation","statusCode":400}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
    </line>
    <line>
      <![CDATA[Step : Test Passed<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Performing Request : login/login_with_invalid_password<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request End Point : login/login_with_invalid_password<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : getting response : <br>]]>
    </line>
    <line>
      <![CDATA[Step : Response object : {"code":1001,"error":true,"type":"general","message":"Invalid username or password","statusCode":400}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
    </line>
    <line>
      <![CDATA[Step : Test Passed<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Performing Request : login/login_with_blank_password<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request End Point : login/login_with_blank_password<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : getting response : <br>]]>
    </line>
    <line>
      <![CDATA[Step : Response object : {"messages":["password should not be empty"],"error":true,"type":"validation","statusCode":400}<br>]]>
    </line>
    <line>
      <![CDATA[Step : ========================================================================<br>]]>
    </line>
    <line>
      <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
    </line>
    <line>
      <![CDATA[Step : Test Passed<br>]]>
    </line>
  </reporter-output>
  <suite started-at="2022-06-24T16:52:28 IST" name="signup" finished-at="2022-06-24T16:52:34 IST" duration-ms="6324">
    <groups>
    </groups>
    <test started-at="2022-06-24T16:52:28 IST" name="verify with valid credentials" finished-at="2022-06-24T16:52:30 IST" duration-ms="2303">
      <class name="api.test.SignUpTest">
        <test-method is-config="true" signature="init()[pri:0, instance:api.test.SignUpTest@1d119efb]" started-at="2022-06-24T16:52:28 IST" name="init" finished-at="2022-06-24T16:52:28 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="verify_with_valid_credentials()[pri:0, instance:api.test.SignUpTest@1d119efb]" started-at="2022-06-24T16:52:28 IST" name="verify_with_valid_credentials" finished-at="2022-06-24T16:52:30 IST" duration-ms="2233" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Performing Request : signup/signup_with_valid_credentials<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request End Point : signup/signup_with_valid_credentials<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : getting response : <br>]]>
            </line>
            <line>
              <![CDATA[Step : Response object : {"payload":{"canResendUserVerificationCode":true},"message":"OTP has been sent successfully","statusCode":201}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Validating status code is equal to expected value : 201<br>]]>
            </line>
            <line>
              <![CDATA[Step : Test Passed<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_with_valid_credentials -->
        <test-method is-config="true" signature="tear_down(org.testng.ITestResult)[pri:0, instance:api.test.SignUpTest@1d119efb]" started-at="2022-06-24T16:52:30 IST" name="tear_down" finished-at="2022-06-24T16:52:30 IST" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_with_valid_credentials status=SUCCESS method=SignUpTest.verify_with_valid_credentials()[pri:0, instance:api.test.SignUpTest@1d119efb] output=Step : ========================================================================<br>]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null
at io.unity.framework.init.base.tear_down(base.java:213)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at io.unity.framework.runner.TestRunner.start(TestRunner.java:71)
at Runner.Runner.main(Runner.java:10)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear_down -->
      </class> <!-- api.test.SignUpTest -->
    </test> <!-- verify with valid credentials -->
    <test started-at="2022-06-24T16:52:30 IST" name="verify with blank password" finished-at="2022-06-24T16:52:30 IST" duration-ms="373">
      <class name="api.test.SignUpTest">
        <test-method is-config="true" signature="init()[pri:0, instance:api.test.SignUpTest@1dde4cb2]" started-at="2022-06-24T16:52:30 IST" name="init" finished-at="2022-06-24T16:52:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="verify_with_blank_password()[pri:0, instance:api.test.SignUpTest@1dde4cb2]" started-at="2022-06-24T16:52:30 IST" name="verify_with_blank_password" finished-at="2022-06-24T16:52:30 IST" duration-ms="370" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Performing Request : signup/signup_with_blank_password<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request End Point : signup/signup_with_blank_password<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : getting response : <br>]]>
            </line>
            <line>
              <![CDATA[Step : Response object : {"messages":["Password must contain at least one upper case, lowercase and a number","password must be longer than or equal to 8 characters"],"error":true,"type":"validation","statusCode":400}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
            </line>
            <line>
              <![CDATA[Step : Test Passed<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_with_blank_password -->
        <test-method is-config="true" signature="tear_down(org.testng.ITestResult)[pri:0, instance:api.test.SignUpTest@1dde4cb2]" started-at="2022-06-24T16:52:30 IST" name="tear_down" finished-at="2022-06-24T16:52:30 IST" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_with_blank_password status=SUCCESS method=SignUpTest.verify_with_blank_password()[pri:0, instance:api.test.SignUpTest@1dde4cb2] output=Step : ========================================================================<br>]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null
at io.unity.framework.init.base.tear_down(base.java:213)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at io.unity.framework.runner.TestRunner.start(TestRunner.java:71)
at Runner.Runner.main(Runner.java:10)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear_down -->
      </class> <!-- api.test.SignUpTest -->
    </test> <!-- verify with blank password -->
    <test started-at="2022-06-24T16:52:30 IST" name="verify with invalid password" finished-at="2022-06-24T16:52:31 IST" duration-ms="335">
      <class name="api.test.SignUpTest">
        <test-method is-config="true" signature="init()[pri:0, instance:api.test.SignUpTest@56620197]" started-at="2022-06-24T16:52:30 IST" name="init" finished-at="2022-06-24T16:52:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="verify_with_invalid_password()[pri:0, instance:api.test.SignUpTest@56620197]" started-at="2022-06-24T16:52:30 IST" name="verify_with_invalid_password" finished-at="2022-06-24T16:52:31 IST" duration-ms="331" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Performing Request : signup/signup_with_invalid_password<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request End Point : signup/signup_with_invalid_password<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : getting response : <br>]]>
            </line>
            <line>
              <![CDATA[Step : Response object : {"messages":["Password must contain at least one upper case, lowercase and a number","password must be longer than or equal to 8 characters"],"error":true,"type":"validation","statusCode":400}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
            </line>
            <line>
              <![CDATA[Step : Test Passed<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_with_invalid_password -->
        <test-method is-config="true" signature="tear_down(org.testng.ITestResult)[pri:0, instance:api.test.SignUpTest@56620197]" started-at="2022-06-24T16:52:31 IST" name="tear_down" finished-at="2022-06-24T16:52:31 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_with_invalid_password status=SUCCESS method=SignUpTest.verify_with_invalid_password()[pri:0, instance:api.test.SignUpTest@56620197] output=Step : ========================================================================<br>]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null
at io.unity.framework.init.base.tear_down(base.java:213)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at io.unity.framework.runner.TestRunner.start(TestRunner.java:71)
at Runner.Runner.main(Runner.java:10)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear_down -->
      </class> <!-- api.test.SignUpTest -->
    </test> <!-- verify with invalid password -->
    <test started-at="2022-06-24T16:52:31 IST" name="verify with invalid email" finished-at="2022-06-24T16:52:31 IST" duration-ms="336">
      <class name="api.test.SignUpTest">
        <test-method is-config="true" signature="init()[pri:0, instance:api.test.SignUpTest@192d43ce]" started-at="2022-06-24T16:52:31 IST" name="init" finished-at="2022-06-24T16:52:31 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="verify_with_invalid_email()[pri:0, instance:api.test.SignUpTest@192d43ce]" started-at="2022-06-24T16:52:31 IST" name="verify_with_invalid_email" finished-at="2022-06-24T16:52:31 IST" duration-ms="332" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Performing Request : signup/signup_with_invalid_email<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request End Point : signup/signup_with_invalid_email<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : getting response : <br>]]>
            </line>
            <line>
              <![CDATA[Step : Response object : {"messages":["email must be an email"],"error":true,"type":"validation","statusCode":400}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
            </line>
            <line>
              <![CDATA[Step : Test Passed<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_with_invalid_email -->
        <test-method is-config="true" signature="tear_down(org.testng.ITestResult)[pri:0, instance:api.test.SignUpTest@192d43ce]" started-at="2022-06-24T16:52:31 IST" name="tear_down" finished-at="2022-06-24T16:52:31 IST" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_with_invalid_email status=SUCCESS method=SignUpTest.verify_with_invalid_email()[pri:0, instance:api.test.SignUpTest@192d43ce] output=Step : ========================================================================<br>]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null
at io.unity.framework.init.base.tear_down(base.java:213)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at io.unity.framework.runner.TestRunner.start(TestRunner.java:71)
at Runner.Runner.main(Runner.java:10)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear_down -->
      </class> <!-- api.test.SignUpTest -->
    </test> <!-- verify with invalid email -->
    <test started-at="2022-06-24T16:52:31 IST" name="verify with blank email" finished-at="2022-06-24T16:52:31 IST" duration-ms="326">
      <class name="api.test.SignUpTest">
        <test-method is-config="true" signature="init()[pri:0, instance:api.test.SignUpTest@1ab3a8c8]" started-at="2022-06-24T16:52:31 IST" name="init" finished-at="2022-06-24T16:52:31 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="verify_with_blank_email()[pri:0, instance:api.test.SignUpTest@1ab3a8c8]" started-at="2022-06-24T16:52:31 IST" name="verify_with_blank_email" finished-at="2022-06-24T16:52:31 IST" duration-ms="321" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Performing Request : signup/signup_with_blank_email<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request End Point : signup/signup_with_blank_email<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : getting response : <br>]]>
            </line>
            <line>
              <![CDATA[Step : Response object : {"messages":["email must be an email"],"error":true,"type":"validation","statusCode":400}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
            </line>
            <line>
              <![CDATA[Step : Test Passed<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_with_blank_email -->
        <test-method is-config="true" signature="tear_down(org.testng.ITestResult)[pri:0, instance:api.test.SignUpTest@1ab3a8c8]" started-at="2022-06-24T16:52:31 IST" name="tear_down" finished-at="2022-06-24T16:52:31 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_with_blank_email status=SUCCESS method=SignUpTest.verify_with_blank_email()[pri:0, instance:api.test.SignUpTest@1ab3a8c8] output=Step : ========================================================================<br>]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null
at io.unity.framework.init.base.tear_down(base.java:213)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at io.unity.framework.runner.TestRunner.start(TestRunner.java:71)
at Runner.Runner.main(Runner.java:10)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear_down -->
      </class> <!-- api.test.SignUpTest -->
    </test> <!-- verify with blank email -->
    <test started-at="2022-06-24T16:52:31 IST" name="verify with blank timezone" finished-at="2022-06-24T16:52:32 IST" duration-ms="323">
      <class name="api.test.SignUpTest">
        <test-method is-config="true" signature="init()[pri:0, instance:api.test.SignUpTest@40ef3420]" started-at="2022-06-24T16:52:31 IST" name="init" finished-at="2022-06-24T16:52:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="verify_with_blank_timezone()[pri:0, instance:api.test.SignUpTest@40ef3420]" started-at="2022-06-24T16:52:31 IST" name="verify_with_blank_timezone" finished-at="2022-06-24T16:52:32 IST" duration-ms="318" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Performing Request : signup/signup_with_blank_timezone<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request End Point : signup/signup_with_blank_timezone<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : getting response : <br>]]>
            </line>
            <line>
              <![CDATA[Step : Response object : {"messages":[" is invalid timezone","timeZone should not be empty"],"error":true,"type":"validation","statusCode":400}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
            </line>
            <line>
              <![CDATA[Step : Test Passed<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_with_blank_timezone -->
        <test-method is-config="true" signature="tear_down(org.testng.ITestResult)[pri:0, instance:api.test.SignUpTest@40ef3420]" started-at="2022-06-24T16:52:32 IST" name="tear_down" finished-at="2022-06-24T16:52:32 IST" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_with_blank_timezone status=SUCCESS method=SignUpTest.verify_with_blank_timezone()[pri:0, instance:api.test.SignUpTest@40ef3420] output=Step : ========================================================================<br>]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null
at io.unity.framework.init.base.tear_down(base.java:213)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at io.unity.framework.runner.TestRunner.start(TestRunner.java:71)
at Runner.Runner.main(Runner.java:10)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear_down -->
      </class> <!-- api.test.SignUpTest -->
    </test> <!-- verify with blank timezone -->
    <test started-at="2022-06-24T16:52:32 IST" name="verify with same credentials" finished-at="2022-06-24T16:52:32 IST" duration-ms="336">
      <class name="api.test.SignUpTest">
        <test-method is-config="true" signature="init()[pri:0, instance:api.test.SignUpTest@795cd85e]" started-at="2022-06-24T16:52:32 IST" name="init" finished-at="2022-06-24T16:52:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="verify_with_same_credentials()[pri:0, instance:api.test.SignUpTest@795cd85e]" started-at="2022-06-24T16:52:32 IST" name="verify_with_same_credentials" finished-at="2022-06-24T16:52:32 IST" duration-ms="333" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Performing Request : signup/signup_with_same_credentials<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request End Point : signup/signup_with_same_credentials<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : getting response : <br>]]>
            </line>
            <line>
              <![CDATA[Step : Response object : {"code":1001,"error":true,"type":"general","message":"User already exists","statusCode":400}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
            </line>
            <line>
              <![CDATA[Step : Test Passed<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_with_same_credentials -->
        <test-method is-config="true" signature="tear_down(org.testng.ITestResult)[pri:0, instance:api.test.SignUpTest@795cd85e]" started-at="2022-06-24T16:52:32 IST" name="tear_down" finished-at="2022-06-24T16:52:32 IST" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_with_same_credentials status=SUCCESS method=SignUpTest.verify_with_same_credentials()[pri:0, instance:api.test.SignUpTest@795cd85e] output=Step : ========================================================================<br>]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null
at io.unity.framework.init.base.tear_down(base.java:213)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at io.unity.framework.runner.TestRunner.start(TestRunner.java:71)
at Runner.Runner.main(Runner.java:10)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear_down -->
      </class> <!-- api.test.SignUpTest -->
    </test> <!-- verify with same credentials -->
    <test started-at="2022-06-24T16:52:32 IST" name="verify login with valid credentials" finished-at="2022-06-24T16:52:33 IST" duration-ms="421">
      <class name="api.test.LoginTest">
        <test-method is-config="true" signature="init()[pri:0, instance:api.test.LoginTest@4d9e68d0]" started-at="2022-06-24T16:52:32 IST" name="init" finished-at="2022-06-24T16:52:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="verify_with_login_valid_credentials()[pri:0, instance:api.test.LoginTest@4d9e68d0]" started-at="2022-06-24T16:52:32 IST" name="verify_with_login_valid_credentials" finished-at="2022-06-24T16:52:33 IST" duration-ms="416" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Performing Request : login/login_with_valid_credentials<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request End Point : login/login_with_valid_credentials<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : getting response : <br>]]>
            </line>
            <line>
              <![CDATA[Step : Response object : {"payload":{"firstName":"","lastName":"","accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjE3MTIsImlhdCI6MTY1NjA2OTc1NCwiZXhwIjoxNjU4NjYxNzU0fQ.PZeZkCITyem_ApKbUPZgouppVrJu_pcKVh7Bb8vXdHs","email":"vir@qable.io","trackingId":"M5lNR1Y1SB"},"message":"Logged in successfully","statusCode":201}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Validating status code is equal to expected value : 201<br>]]>
            </line>
            <line>
              <![CDATA[Step : Test Passed<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_with_login_valid_credentials -->
        <test-method is-config="true" signature="tear_down(org.testng.ITestResult)[pri:0, instance:api.test.LoginTest@4d9e68d0]" started-at="2022-06-24T16:52:33 IST" name="tear_down" finished-at="2022-06-24T16:52:33 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_with_login_valid_credentials status=SUCCESS method=LoginTest.verify_with_login_valid_credentials()[pri:0, instance:api.test.LoginTest@4d9e68d0] output=Step : ========================================================================<br>]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null
at io.unity.framework.init.base.tear_down(base.java:213)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at io.unity.framework.runner.TestRunner.start(TestRunner.java:71)
at Runner.Runner.main(Runner.java:10)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear_down -->
      </class> <!-- api.test.LoginTest -->
    </test> <!-- verify login with valid credentials -->
    <test started-at="2022-06-24T16:52:33 IST" name="verify login with invalid email" finished-at="2022-06-24T16:52:33 IST" duration-ms="336">
      <class name="api.test.LoginTest">
        <test-method is-config="true" signature="init()[pri:0, instance:api.test.LoginTest@6c80d78a]" started-at="2022-06-24T16:52:33 IST" name="init" finished-at="2022-06-24T16:52:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="verify_with_login_invalid_email()[pri:0, instance:api.test.LoginTest@6c80d78a]" started-at="2022-06-24T16:52:33 IST" name="verify_with_login_invalid_email" finished-at="2022-06-24T16:52:33 IST" duration-ms="333" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Performing Request : login/login_with_invalid_email<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request End Point : login/login_with_invalid_email<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : getting response : <br>]]>
            </line>
            <line>
              <![CDATA[Step : Response object : {"messages":["email must be an email"],"error":true,"type":"validation","statusCode":400}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
            </line>
            <line>
              <![CDATA[Step : Test Passed<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_with_login_invalid_email -->
        <test-method is-config="true" signature="tear_down(org.testng.ITestResult)[pri:0, instance:api.test.LoginTest@6c80d78a]" started-at="2022-06-24T16:52:33 IST" name="tear_down" finished-at="2022-06-24T16:52:33 IST" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_with_login_invalid_email status=SUCCESS method=LoginTest.verify_with_login_invalid_email()[pri:0, instance:api.test.LoginTest@6c80d78a] output=Step : ========================================================================<br>]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null
at io.unity.framework.init.base.tear_down(base.java:213)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at io.unity.framework.runner.TestRunner.start(TestRunner.java:71)
at Runner.Runner.main(Runner.java:10)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear_down -->
      </class> <!-- api.test.LoginTest -->
    </test> <!-- verify login with invalid email -->
    <test started-at="2022-06-24T16:52:33 IST" name="verify login with blank email" finished-at="2022-06-24T16:52:33 IST" duration-ms="330">
      <class name="api.test.LoginTest">
        <test-method is-config="true" signature="init()[pri:0, instance:api.test.LoginTest@6dc17b83]" started-at="2022-06-24T16:52:33 IST" name="init" finished-at="2022-06-24T16:52:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="verify_with_login_blank_email()[pri:0, instance:api.test.LoginTest@6dc17b83]" started-at="2022-06-24T16:52:33 IST" name="verify_with_login_blank_email" finished-at="2022-06-24T16:52:33 IST" duration-ms="326" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Performing Request : login/login_with_blank_email<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request End Point : login/login_with_blank_email<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : getting response : <br>]]>
            </line>
            <line>
              <![CDATA[Step : Response object : {"messages":["email must be an email"],"error":true,"type":"validation","statusCode":400}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
            </line>
            <line>
              <![CDATA[Step : Test Passed<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_with_login_blank_email -->
        <test-method is-config="true" signature="tear_down(org.testng.ITestResult)[pri:0, instance:api.test.LoginTest@6dc17b83]" started-at="2022-06-24T16:52:33 IST" name="tear_down" finished-at="2022-06-24T16:52:33 IST" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_with_login_blank_email status=SUCCESS method=LoginTest.verify_with_login_blank_email()[pri:0, instance:api.test.LoginTest@6dc17b83] output=Step : ========================================================================<br>]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null
at io.unity.framework.init.base.tear_down(base.java:213)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at io.unity.framework.runner.TestRunner.start(TestRunner.java:71)
at Runner.Runner.main(Runner.java:10)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear_down -->
      </class> <!-- api.test.LoginTest -->
    </test> <!-- verify login with blank email -->
    <test started-at="2022-06-24T16:52:33 IST" name="verify login with invalid password" finished-at="2022-06-24T16:52:34 IST" duration-ms="415">
      <class name="api.test.LoginTest">
        <test-method is-config="true" signature="init()[pri:0, instance:api.test.LoginTest@6e20b53a]" started-at="2022-06-24T16:52:33 IST" name="init" finished-at="2022-06-24T16:52:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="verify_with_login_invalid_password()[pri:0, instance:api.test.LoginTest@6e20b53a]" started-at="2022-06-24T16:52:33 IST" name="verify_with_login_invalid_password" finished-at="2022-06-24T16:52:34 IST" duration-ms="410" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Performing Request : login/login_with_invalid_password<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request End Point : login/login_with_invalid_password<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : getting response : <br>]]>
            </line>
            <line>
              <![CDATA[Step : Response object : {"code":1001,"error":true,"type":"general","message":"Invalid username or password","statusCode":400}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
            </line>
            <line>
              <![CDATA[Step : Test Passed<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_with_login_invalid_password -->
        <test-method is-config="true" signature="tear_down(org.testng.ITestResult)[pri:0, instance:api.test.LoginTest@6e20b53a]" started-at="2022-06-24T16:52:34 IST" name="tear_down" finished-at="2022-06-24T16:52:34 IST" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_with_login_invalid_password status=SUCCESS method=LoginTest.verify_with_login_invalid_password()[pri:0, instance:api.test.LoginTest@6e20b53a] output=Step : ========================================================================<br>]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null
at io.unity.framework.init.base.tear_down(base.java:213)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at io.unity.framework.runner.TestRunner.start(TestRunner.java:71)
at Runner.Runner.main(Runner.java:10)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear_down -->
      </class> <!-- api.test.LoginTest -->
    </test> <!-- verify login with invalid password -->
    <test started-at="2022-06-24T16:52:34 IST" name="verify login with blank password" finished-at="2022-06-24T16:52:34 IST" duration-ms="326">
      <class name="api.test.LoginTest">
        <test-method is-config="true" signature="init()[pri:0, instance:api.test.LoginTest@158da8e]" started-at="2022-06-24T16:52:34 IST" name="init" finished-at="2022-06-24T16:52:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="verify_with_login_blank_password()[pri:0, instance:api.test.LoginTest@158da8e]" started-at="2022-06-24T16:52:34 IST" name="verify_with_login_blank_password" finished-at="2022-06-24T16:52:34 IST" duration-ms="323" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Performing Request : login/login_with_blank_password<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request End Point : login/login_with_blank_password<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request Headers : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : Request body : {Content-Type=application/json}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : getting response : <br>]]>
            </line>
            <line>
              <![CDATA[Step : Response object : {"messages":["password should not be empty"],"error":true,"type":"validation","statusCode":400}<br>]]>
            </line>
            <line>
              <![CDATA[Step : ========================================================================<br>]]>
            </line>
            <line>
              <![CDATA[Step : Validating status code is equal to expected value : 400<br>]]>
            </line>
            <line>
              <![CDATA[Step : Test Passed<br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_with_login_blank_password -->
        <test-method is-config="true" signature="tear_down(org.testng.ITestResult)[pri:0, instance:api.test.LoginTest@158da8e]" started-at="2022-06-24T16:52:34 IST" name="tear_down" finished-at="2022-06-24T16:52:34 IST" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_with_login_blank_password status=SUCCESS method=LoginTest.verify_with_login_blank_password()[pri:0, instance:api.test.LoginTest@158da8e] output=Step : ========================================================================<br>]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.quit()" because "this.driver" is null
at io.unity.framework.init.base.tear_down(base.java:213)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at io.unity.framework.runner.TestRunner.start(TestRunner.java:71)
at Runner.Runner.main(Runner.java:10)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear_down -->
      </class> <!-- api.test.LoginTest -->
    </test> <!-- verify login with blank password -->
  </suite> <!-- signup -->
</testng-results>
